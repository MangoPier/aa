{"name": "test_attach_photo", "status": "broken", "statusDetails": {"message": "OSError: [Errno 22] Invalid argument: 'D:\\\\Pythoncode\\x07a\\\\Snipaste_2022-10-15_17-05-23.jpg'", "trace": "def test_attach_photo():\n>       allure.attach.file(\"D:\\Pythoncode\\aa\\Snipaste_2022-10-15_17-05-23.jpg\",name=\"这是一张图片\",attachment_type=allure.attachment_type.PNG)\n\ntest_allurelink_case.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Zhao FJ\\AppData\\Roaming\\Python\\Python37\\site-packages\\allure_commons\\_allure.py:182: in file\n    plugin_manager.hook.attach_file(source=source, name=name, attachment_type=attachment_type, extension=extension)\nC:\\Users\\Zhao FJ\\AppData\\Roaming\\Python\\Python37\\site-packages\\pluggy\\_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\nC:\\Users\\Zhao FJ\\AppData\\Roaming\\Python\\Python37\\site-packages\\pluggy\\_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\nC:\\Users\\Zhao FJ\\AppData\\Roaming\\Python\\Python37\\site-packages\\allure_pytest\\listener.py:226: in attach_file\n    self.allure_logger.attach_file(uuid4(), source, name=name, attachment_type=attachment_type, extension=extension)\nC:\\Users\\Zhao FJ\\AppData\\Roaming\\Python\\Python37\\site-packages\\allure_commons\\reporter.py:114: in attach_file\n    plugin_manager.hook.report_attached_file(source=source, file_name=file_name)\nC:\\Users\\Zhao FJ\\AppData\\Roaming\\Python\\Python37\\site-packages\\pluggy\\_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\nC:\\Users\\Zhao FJ\\AppData\\Roaming\\Python\\Python37\\site-packages\\pluggy\\_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\nC:\\Users\\Zhao FJ\\AppData\\Roaming\\Python\\Python37\\site-packages\\allure_commons\\logger.py:53: in report_attached_file\n    shutil.copy2(source, destination)\nd:\\python\\lib\\shutil.py:263: in copy2\n    copyfile(src, dst, follow_symlinks=follow_symlinks)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsrc = 'D:\\\\Pythoncode\\x07a\\\\Snipaste_2022-10-15_17-05-23.jpg'\ndst = 'D:\\\\Pythoncode\\\\aa\\\\result90\\\\ccd53636-2b79-40a3-afff-de09a84b93f9-attachment.png'\n\n    def copyfile(src, dst, *, follow_symlinks=True):\n        \"\"\"Copy data from src to dst.\n    \n        If follow_symlinks is not set and src is a symbolic link, a new\n        symlink will be created instead of copying the file it points to.\n    \n        \"\"\"\n        if _samefile(src, dst):\n            raise SameFileError(\"{!r} and {!r} are the same file\".format(src, dst))\n    \n        for fn in [src, dst]:\n            try:\n                st = os.stat(fn)\n            except OSError:\n                # File most likely does not exist\n                pass\n            else:\n                # XXX What about other special files? (sockets, devices...)\n                if stat.S_ISFIFO(st.st_mode):\n                    raise SpecialFileError(\"`%s` is a named pipe\" % fn)\n    \n        if not follow_symlinks and os.path.islink(src):\n            os.symlink(os.readlink(src), dst)\n        else:\n>           with open(src, 'rb') as fsrc:\nE           OSError: [Errno 22] Invalid argument: 'D:\\\\Pythoncode\\x07a\\\\Snipaste_2022-10-15_17-05-23.jpg'\n\nd:\\python\\lib\\shutil.py:120: OSError"}, "attachments": [{"name": "这是一张图片", "source": "ccd53636-2b79-40a3-afff-de09a84b93f9-attachment.png", "type": "image/png"}], "start": 1672991901645, "stop": 1672991901645, "uuid": "320ecff8-5a53-414f-963f-bc76bbf35c6e", "historyId": "b5354dd4c84123d68ea93203383b8e3c", "testCaseId": "077ac14928ff92a4bcb49d50c0d6eb66", "fullName": "test_allurelink_case#test_attach_photo", "labels": [{"name": "suite", "value": "test_allurelink_case"}, {"name": "host", "value": "Windows"}, {"name": "thread", "value": "22104-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_allurelink_case"}]}